;;;; -*- Mode: LISP; Syntax: Ansi-Common-Lisp; Base: 10; Package: CL-POSTGRES; -*-
(in-package :saslprep-tests)

;; http://www.unicode.org/L2/L1999/UnicodeData.html

(defun get-chars-mapped-to-nothing (&optional (form :char))
  "Returns a list of characters commonly mapped to nothing per RFC 3454. Default returns a list of charactershex strings. This can be changed by passing in an optional parameter of either :hex-string (returning a list of strings of the hexadecimal representation of the code-point), :hex (an integer represented in hex) or :code-points (which will return a list of decimals representing the code-points)."
  (let ((lst '(#x00AD #x1806 #x200B #x2060 #xFEFF #x034F #x180B #x180C #x180D #x200C #x200D #xFE00 #xFE01 #xFE02 #xFE03 #xFE04 #xFE05 #xFE06 #xFE07 #xFE08 #xFE09 #xFE0A #xFE0B #xFE0C #xFE0D #xFE0E #xFE0F)))
    (cond ((eq form :char)
           (loop for x in lst
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst collect (write-to-string x :base 16)))
          (t lst))))

(defun get-chars-mapped-to-space (&optional (form :char))
  "Returns a list of characters mapped to space 0020 per RFC 3454. Default returns a list of character hex strings. This can be changed by passing in an optional parameter of either :hex-string (returning a list of strings of the hexadecimal representation of the code-point), :hex (an integer represented in hex) or :code-points (which will return a list of decimals representing the code-points)."
  (let ((lst '(#x00A0 #x1680 #x2000 #x2001 #x2002 #x2003 #x2004 #x2005 #x2006 #x2007 #x2008 #x2009 #x200A #x200B #x202F #x205F #x3000)))
    (cond ((eq form :char)
           (loop for x in lst
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst collect (write-to-string x :base 16)))
          (t lst))))

(defun get-ascii-control-chars (&optional (form :char))
  "Returns a list of ascii control characters as defined by RFC 3454 Table C.2.1. Default returns a list of charactershex strings. This can be changed by passing in an optional parameter of either :hex-string (returning a list of strings of the hexadecimal representation of the code-point), :hex (an integer represented in hex) or :code-points (which will return a list of decimals representing the code-points)."
  (let ((lst '(#x0 #x1 #x2 #x3 #x4 #x5 #x6 #x7 #x8 #x9 #xA #xB #xC #xD #xE #xF #x10 #x11 #x12 #x13 #x14 #x15 #x16 #x17 #x18 #x19 #x1A #x1B #x1C #x1D #x1E #x1F #x7F)))
    (cond ((eq form :char)
           (loop for x in lst
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst collect (write-to-string x :base 16)))
          (t lst))))

(defun get-non-ascii-control-chars (&optional (form :char))
  "Returns a list of non-ascii control characters as defined by RFC 3454 Table C.2.2. Default returns a list of charactershex strings. This can be changed by passing in an optional parameter of either :hex-string (returning a list of strings of the hexadecimal representation of the code-point),  :hex (an integer represented in hex) or :code-points (which will return a list of decimals representing the code-points)."
  (let ((lst (alexandria:flatten (list (loop for x from #x0080 to #x009F collect x)
                                       (loop for x from #x206A to #x206F collect x)
                                       (loop for x from #xFFF9 to #xFFFC collect x)
                                 #x06DD #x070F #x180E #x200C #x200D #x2028 #x2029 #x2060 #x2061 #x2062 #x2063 #xFEFF))))
    (cond ((eq form :char)
           (loop for x in lst
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst collect (write-to-string x :base 16)))
          (t lst))))

(defun get-non-ascii-space-chars (&optional (form :char))
  "Returns a list of non-ascii space characters as defined in RFC 3454 Table C.1.2. and RFC 4013. Default returns a list of character strings. This can be changed by passing in an optional parameter of either :hex-string (returning a list of strings of the hexadecimal representation of the code-point),
 :hex (an integer represented in hex) or :code-points (which will return a list of decimals representing the code-points)."
  (let ((lst '(#x00A0 #x1680 #x2000 #x2001 #x2002 #x2003 #x2004 #x2005 #x2006 #x2007 #x2008 #x2009 #x200A #x200B #x202F #x205F #x3000)))
    (cond ((eq form :char)
           (loop for x in lst
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst collect (write-to-string x :base 16)))
          (t lst))))

(defun get-private-use-chars (&optional (form :char))
  "Returns a list of private use characters as defined by RFC 3454 Table C.3 and RFC 4013. Default returns a list of character strings. The optional parameter can be either :char (which will result returning a list of chars), :hex-string (which will result in returning a list of strings of the hexadecimal representation of the code) or anything else will result in returning a list of the code points."
  (let ((lst (alexandria:flatten (list (loop for x from #xE000 to #xF8FF collect x)
                                       (loop for x from #xF0000 to #xFFFFD collect x)
                                       (loop for x from #x100000 to #x10FFFD collect x)))))
    (cond ((eq form :char)
           (loop for x in lst
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst
              collect (write-to-string x :base 16)))
          (t lst))))

(defun get-non-char-code-points (&optional (form :char))
  "Returns a list of non-character code points as defined in RFC 3454 Table C.4 and RFC 4013. Default returns a list of character strings. The optional parameter can be either :char (which will result returning a list of chars), :hex-string (which will result in returning a list of strings of the hexadecimal representation of the code) or anything else will result in returning a list of the code points."
  (let ((lst nil))
    (loop for x in '((#xFDD0 . #xFDEF)(#xFFFE .  #xFFFF)(#x1FFFE .  #x1FFFF)(#x2FFFE .  #x2FFFF)(#x3FFFE .  #x3FFFF)(#x4FFFE .  #x4FFFF)
                     (#x5FFFE .  #x5FFFF)(#x6FFFE .  #x6FFFF)(#x7FFFE .  #x7FFFF)(#x8FFFE .  #x8FFFF)(#x9FFFE .  #x9FFFF)(#xAFFFE .  #xAFFFF)
                     (#xBFFFE .  #xBFFFF)(#xCFFFE .  #xCFFFF)(#xDFFFE .  #xDFFFF)(#xEFFFE .  #xEFFFF)(#xFFFFE .  #xFFFFF)(#x10FFFE .  #x10FFFF))
       do (loop for y from (car x) to (cdr x) do (push y lst)))
    (cond ((eq form :char)
           (loop for x in lst collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst
              collect (write-to-string x :base 16)))
          (t lst))))

(defun get-surrogate-code-points (&optional (form :char))
  "Returns a list of surrogate-code-points as defined in RFC 3454 Table C.5 and RFC 4013. Default returns a list of character strings. The optional parameter can be either :char (which will result returning a list of chars), :hex-string (which will result in returning a list of strings of the hexadecimal representation of the code) or anything else will result in returning a list of the code points."
  (let ((lst (loop for x from #xD800 to #xDFFF
                collect x)))
    (cond ((eq form :char)
           (loop for x in lst collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst
              collect (write-to-string x :base 16)))
          (t lst))))


(defun get-inappropriate-for-plain-text-chars (&optional (form :char))
  "Returns a list of characters considered inappropriate for plain text characters as defined by RFC 3454 Table C.6. Default returns a list of character strings. The optional parameter can be either :char (which will result returning a list of chars), :hex-string (which will result in returning a list of strings of the hexadecimal representation of the code) or anything else will result in returning a list of the code points."
  (let ((lst '(65529 65530 65531 65532 65533)))
    (cond ((eq form :char)
           (loop for x in lst
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst collect (write-to-string x :base 16)))
          (t lst))))

(defun get-inappropriate-for-canonical-representation-chars (&optional (form :char))
  "Returns a list of characters considered inappropriate for canonical representation under RFC 3454 Table C.7.  Default returns a list of character strings. The optional parameter can be either :char (which will result returning a list of chars), :hex-string (which will result in returning a list of strings of the hexadecimal representation of the code) or anything else will result in returning a list of the code points."
  (let ((lst '(12272 12273 12274 12275 12276 12277 12278 12279 12280 12281 12282 12283)))
    (cond ((eq form :char)
           (loop for x in lst
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst collect (write-to-string x :base 16)))
          (t lst))))

(defun get-change-display-property-chars (&optional (form :char))
  "Returns a list of characters which are classified as changing display properties RFC 3454 Table C.8. Default returns a list of character strings. The optional parameter can be either :char (which will result returning a list of chars), :hex-string (which will result in returning a list of strings of the hexadecimal representation of the code) or anything else will result in returning a list of the code points."
  (let ((lst '(#x0340 #x0341 #x200E #x200F #x202A #x202B #x202C #x202D #x202E #x206A #x206B #x206C #x206D #x206E #x206F)))
    (cond ((eq form :char)
           (loop for x in lst
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst collect (write-to-string x :base 16)))
          (t lst))))

(defun get-tagging-chars (&optional (form :char))
  "Returns a list of tagging characters as defined in StringPrep C.9.  Default returns a list of character strings. The optional parameter can be either :char (which will result returning a list of chars), :hex-string (which will result in returning a list of strings of the hexadecimal representation of the code) or anything else will result in returning a list of the code points."
  (let ((lst '(917536 917537 917538 917539 917540 917541 917542 917543 917544 917545 917546 917547 917548 917549 917550 917551 917552 917553 917554 917555 917556 917557 917558 917559 917560 917561 917562 917563 917564 917565 917566 917567 917568 917569 917570 917571 917572 917573 917574 917575 917576 917577 917578 917579 917580 917581 917582 917583 917584 917585 917586 917587 917588 917589 917590 917591 917592 917593 917594 917595 917596 917597 917598 917599 917600 917601 917602 917603 917604 917605 917606 917607 917608 917609 917610 917611 917612 917613 917614 917615 917616 917617 917618 917619 917620 917621 917622 917623 917624 917625 917626 917627 917628 917629 917630 917631)))
    (cond ((eq form :char)
           (loop for x in lst
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst collect (write-to-string x :base 16)))
          (t lst))))

(defun get-printable-ascii (&optional (form :char))
  "Returns a list of the printable ascii characters (32 to 126). This does not include extended ascii. Default returns a list of character strings. The optional parameter can be either :char (which will result returning a list of chars), :hex-string (which will result in returning a list of strings of the hexadecimal representation of the code) or anything else will result in returning a list of the code points.
parameter will return an empty list."
  (let ((lst '(32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126)))
    (cond ((eq form :char)
           (loop for x in lst
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in lst collect (write-to-string x :base 16)))
          (t lst))))

(defun get-bidirectional-property-R-or-AL-chars (&optional (form :char))
  "Returns a list of characters which have a bidirectional R or AL property per RFC 3454 Table D.1. and RFC 4013.  Default returns a list of character strings. The optional parameter can be either :char (which will result returning a list of chars), :hex-string (which will result in returning a list of strings of the hexadecimal representation of the code) or anything else will result in returning a list of the code points."
  (let ((l-chars (alexandria:flatten
                  (list '(#x05BE #x05C0 #x05C3  #x061B #x061F #x06DD #x0710 #x07B1 #x200F #xFB1D #xFB3E)
                        (loop for x from  #x05D0 to #x05EA collect x)
                        (loop for x from  #x05F0 to #x05F4 collect x)
                        (loop for x from  #x0621 to #x063A collect x)
                        (loop for x from  #x0640 to #x064A collect x)
                        (loop for x from  #x066D to #x066F collect x)
                        (loop for x from  #x0671 to #x06D5 collect x)
                        (loop for x from  #x06E5 to #x06E6 collect x)
                        (loop for x from  #x06FA to #x06FE collect x)
                        (loop for x from  #x0700 to #x070D collect x)
                        (loop for x from  #x0712 to #x072C collect x)
                        (loop for x from  #x0780 to #x07A5 collect x)
                        (loop for x from  #xFB1F to #xFB28 collect x)
                        (loop for x from  #xFB2A to #xFB36 collect x)
                        (loop for x from  #xFB38 to #xFB3C collect x)
                        (loop for x from  #xFB40 to #xFB41 collect x)
                        (loop for x from  #xFB43 to #xFB44 collect x)
                        (loop for x from  #xFB46 to #xFBB1 collect x)
                        (loop for x from  #xFBD3 to #xFD3D collect x)
                        (loop for x from  #xFD50 to #xFD8F collect x)
                        (loop for x from  #xFD92 to #xFDC7 collect x)
                        (loop for x from  #xFDF0 to #xFDFC collect x)
                        (loop for x from  #xFE70 to #xFE74 collect x)
                        (loop for x from  #xFE76 to #xFEFC collect x)))))
    (cond ((eq form :char)
           (loop for x in l-chars
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in l-chars
              collect (write-to-string x :base 16)))
          (t l-chars))))

(defun get-bidirectional-property-L-chars (&optional (form :char))
  "Returns a list of characters which have a bidirectional L property per RFC 3454 Table D.2. and RFC 4013.  Default returns a list of character strings. The optional parameter can be either :char (which will result returning a list of chars), :hex-string (which will result in returning a list of strings of the hexadecimal representation of the code) or anything else will result in returning a list of the code points."
  (let ((r-chars (alexandria:flatten
                  (list #x00AA  #x00B5 #x00BA #x038C #x02EE #x037A #x0386 #x0589 #x0903 #x0950 #x09B2 #x09D7 #x0A5E #x0A83 #x0A8D #x0AC9 #x0AD0 #x0AE0 #x0B40 #x0B57 #x0B83 #x0B9C #x0BD7 #x0CBE #x0CDE #x0D57 #x0DBD #x0E84 #x0E8A #x0E8D #x0EA5 #x0EA7 #x0EBD #x0EC6 #x0F36 #x0F38 #x0F7F #x0F85 #x0FCF #x102C #x1031 #x1038 #x10FB #x1248 #x1258 #x1288 #x12B0 #x12C0 #x1310 #x17DC #x1F59 #x1F5B #x1F5D #x1FBE #x200E #x2071 #x207F #x2102 #x2107 #x2115 #x2124 #x2126 #x2128 #x2395 #x1D4A2 #x1D4BB #x1D546
                        (loop for x from #x0041 to #x005A collect x)
                        (loop for x from  #x0061 to #x007A collect x)
                        (loop for x from  #x00C0 to #x00D6 collect x)
                        (loop for x from  #x00D8 to #x00F6 collect x)
                        (loop for x from  #x00F8 to #x0220 collect x)
                        (loop for x from  #x0222 to #x0233 collect x)
                        (loop for x from  #x0250 to #x02AD collect x)
                        (loop for x from  #x02B0 to #x02B8 collect x)
                        (loop for x from  #x02BB to #x02C1 collect x)
                        (loop for x from  #x02D0 to #x02D1 collect x)
                        (loop for x from  #x02E0 to #x02E4 collect x)
                        (loop for x from  #x0388 to #x038A collect x)
                        (loop for x from  #x038E to #x03A1 collect x)
                        (loop for x from  #x03A3 to #x03CE collect x)
                        (loop for x from  #x03D0 to #x03F5 collect x)
                        (loop for x from  #x0400 to #x0482 collect x)
                        (loop for x from  #x048A to #x04CE collect x)
                        (loop for x from  #x04D0 to #x04F5 collect x)
                        (loop for x from  #x04F8 to #x04F9 collect x)
                        (loop for x from  #x0500 to #x050F collect x)
                        (loop for x from  #x0531 to #x0556 collect x)
                        (loop for x from  #x0559 to #x055F collect x)
                        (loop for x from  #x0561 to #x0587 collect x)
                        (loop for x from  #x0905 to #x0939 collect x)
                        (loop for x from  #x093D to #x0940 collect x)
                        (loop for x from  #x0949 to #x094C collect x)
                        (loop for x from  #x0958 to #x0961 collect x)
                        (loop for x from  #x0964 to #x0970 collect x)
                        (loop for x from  #x0982 to #x0983 collect x)
                        (loop for x from  #x0985 to #x098C collect x)
                        (loop for x from  #x098F to #x0990 collect x)
                        (loop for x from  #x0993 to #x09A8 collect x)
                        (loop for x from  #x09AA to #x09B0 collect x)
                        (loop for x from  #x09B6 to #x09B9 collect x)
                        (loop for x from  #x09BE to #x09C0 collect x)
                        (loop for x from  #x09C7 to #x09C8 collect x)
                        (loop for x from  #x09CB to #x09CC collect x)
                        (loop for x from  #x09DC to #x09DD collect x)
                        (loop for x from  #x09DF to #x09E1 collect x)
                        (loop for x from  #x09E6 to #x09F1 collect x)
                        (loop for x from  #x09F4 to #x09FA collect x)
                        (loop for x from  #x0A05 to #x0A0A collect x)
                        (loop for x from  #x0A0F to #x0A10 collect x)
                        (loop for x from  #x0A13 to #x0A28 collect x)
                        (loop for x from  #x0A2A to #x0A30 collect x)
                        (loop for x from  #x0A32 to #x0A33 collect x)
                        (loop for x from  #x0A35 to #x0A36 collect x)
                        (loop for x from  #x0A38 to #x0A39 collect x)
                        (loop for x from  #x0A3E to #x0A40 collect x)
                        (loop for x from  #x0A59 to #x0A5C collect x)
                        (loop for x from  #x0A66 to #x0A6F collect x)
                        (loop for x from  #x0A72 to #x0A74 collect x)
                        (loop for x from  #x0A85 to #x0A8B collect x)
                        (loop for x from  #x0A8F to #x0A91 collect x)
                        (loop for x from  #x0A93 to #x0AA8 collect x)
                        (loop for x from  #x0AAA to #x0AB0 collect x)
                        (loop for x from  #x0AB2 to #x0AB3 collect x)
                        (loop for x from  #x0AB5 to #x0AB9 collect x)
                        (loop for x from  #x0ABD to #x0AC0 collect x)
                        (loop for x from  #x0ACB to #x0ACC collect x)
                        (loop for x from  #x0AE6 to #x0AEF collect x)
                        (loop for x from  #x0B02 to #x0B03 collect x)
                        (loop for x from  #x0B05 to #x0B0C collect x)
                        (loop for x from  #x0B0F to #x0B10 collect x)
                        (loop for x from  #x0B13 to #x0B28 collect x)
                        (loop for x from  #x0B2A to #x0B30 collect x)
                        (loop for x from  #x0B32 to #x0B33 collect x)
                        (loop for x from  #x0B36 to #x0B39 collect x)
                        (loop for x from  #x0B3D to #x0B3E collect x)
                        (loop for x from  #x0B47 to #x0B48 collect x)
                        (loop for x from  #x0B4B to #x0B4C collect x)
                        (loop for x from  #x0B5C to #x0B5D collect x)
                        (loop for x from  #x0B5F to #x0B61 collect x)
                        (loop for x from  #x0B66 to #x0B70 collect x)
                        (loop for x from  #x0B85 to #x0B8A collect x)
                        (loop for x from  #x0B8E to #x0B90 collect x)
                        (loop for x from  #x0B92 to #x0B95 collect x)
                        (loop for x from  #x0B99 to #x0B9A collect x)
                        (loop for x from  #x0B9E to #x0B9F collect x)
                        (loop for x from  #x0BA3 to #x0BA4 collect x)
                        (loop for x from  #x0BA8 to #x0BAA collect x)
                        (loop for x from  #x0BAE to #x0BB5 collect x)
                        (loop for x from  #x0BB7 to #x0BB9 collect x)
                        (loop for x from  #x0BBE to #x0BBF collect x)
                        (loop for x from  #x0BC1 to #x0BC2 collect x)
                        (loop for x from  #x0BC6 to #x0BC8 collect x)
                        (loop for x from  #x0BCA to #x0BCC collect x)
                        (loop for x from  #x0BE7 to #x0BF2 collect x)
                        (loop for x from  #x0C01 to #x0C03 collect x)
                        (loop for x from  #x0C05 to #x0C0C collect x)
                        (loop for x from  #x0C0E to #x0C10 collect x)
                        (loop for x from  #x0C12 to #x0C28 collect x)
                        (loop for x from  #x0C2A to #x0C33 collect x)
                        (loop for x from  #x0C35 to #x0C39 collect x)
                        (loop for x from  #x0C41 to #x0C44 collect x)
                        (loop for x from  #x0C60 to #x0C61 collect x)
                        (loop for x from  #x0C66 to #x0C6F collect x)
                        (loop for x from  #x0C82 to #x0C83 collect x)
                        (loop for x from  #x0C85 to #x0C8C collect x)
                        (loop for x from  #x0C8E to #x0C90 collect x)
                        (loop for x from  #x0C92 to #x0CA8 collect x)
                        (loop for x from  #x0CAA to #x0CB3 collect x)
                        (loop for x from  #x0CB5 to #x0CB9 collect x)
                        (loop for x from  #x0CC0 to #x0CC4 collect x)
                        (loop for x from  #x0CC7 to #x0CC8 collect x)
                        (loop for x from  #x0CCA to #x0CCB collect x)
                        (loop for x from  #x0CD5 to #x0CD6 collect x)
                        (loop for x from  #x0CE0 to #x0CE1 collect x)
                        (loop for x from  #x0CE6 to #x0CEF collect x)
                        (loop for x from  #x0D02 to #x0D03 collect x)
                        (loop for x from  #x0D05 to #x0D0C collect x)
                        (loop for x from  #x0D0E to #x0D10 collect x)
                        (loop for x from  #x0D12 to #x0D28 collect x)
                        (loop for x from  #x0D2A to #x0D39 collect x)
                        (loop for x from  #x0D3E to #x0D40 collect x)
                        (loop for x from  #x0D46 to #x0D48 collect x)
                        (loop for x from  #x0D4A to #x0D4C collect x)
                        (loop for x from  #x0D60 to #x0D61 collect x)
                        (loop for x from  #x0D66 to #x0D6F collect x)
                        (loop for x from  #x0D82 to #x0D83 collect x)
                        (loop for x from  #x0D85 to #x0D96 collect x)
                        (loop for x from  #x0D9A to #x0DB1 collect x)
                        (loop for x from  #x0DB3 to #x0DBB collect x)
                        (loop for x from  #x0DC0 to #x0DC6 collect x)
                        (loop for x from  #x0DCF to #x0DD1 collect x)
                        (loop for x from  #x0DD8 to #x0DDF collect x)
                        (loop for x from  #x0DF2 to #x0DF4 collect x)
                        (loop for x from  #x0E01 to #x0E30 collect x)
                        (loop for x from  #x0E32 to #x0E33 collect x)
                        (loop for x from  #x0E40 to #x0E46 collect x)
                        (loop for x from  #x0E4F to #x0E5B collect x)
                        (loop for x from  #x0E81 to #x0E82 collect x)
                        (loop for x from  #x0E87 to #x0E88 collect x)
                        (loop for x from  #x0E94 to #x0E97 collect x)
                        (loop for x from  #x0E99 to #x0E9F collect x)
                        (loop for x from  #x0EA1 to #x0EA3 collect x)
                        (loop for x from  #x0EAA to #x0EAB collect x)
                        (loop for x from  #x0EAD to #x0EB0 collect x)
                        (loop for x from  #x0EB2 to #x0EB3 collect x)
                        (loop for x from  #x0EC0 to #x0EC4 collect x)
                        (loop for x from  #x0ED0 to #x0ED9 collect x)
                        (loop for x from  #x0EDC to #x0EDD collect x)
                        (loop for x from  #x0F00 to #x0F17 collect x)
                        (loop for x from  #x0F1A to #x0F34 collect x)
                        (loop for x from  #x0F3E to #x0F47 collect x)
                        (loop for x from  #x0F49 to #x0F6A collect x)
                        (loop for x from  #x0F88 to #x0F8B collect x)
                        (loop for x from  #x0FBE to #x0FC5 collect x)
                        (loop for x from  #x0FC7 to #x0FCC collect x)
                        (loop for x from  #x1000 to #x1021 collect x)
                        (loop for x from  #x1023 to #x1027 collect x)
                        (loop for x from  #x1029 to #x102A collect x)
                        (loop for x from  #x1040 to #x1057 collect x)
                        (loop for x from  #x10A0 to #x10C5 collect x)
                        (loop for x from  #x10D0 to #x10F8 collect x)
                        (loop for x from  #x1100 to #x1159 collect x)
                        (loop for x from  #x115F to #x11A2 collect x)
                        (loop for x from  #x11A8 to #x11F9 collect x)
                        (loop for x from  #x1200 to #x1206 collect x)
                        (loop for x from  #x1208 to #x1246 collect x)
                        (loop for x from  #x124A to #x124D collect x)
                        (loop for x from  #x1250 to #x1256 collect x)
                        (loop for x from  #x125A to #x125D collect x)
                        (loop for x from  #x1260 to #x1286 collect x)
                        (loop for x from  #x128A to #x128D collect x)
                        (loop for x from  #x1290 to #x12AE collect x)
                        (loop for x from  #x12B2 to #x12B5 collect x)
                        (loop for x from  #x12B8 to #x12BE collect x)
                        (loop for x from  #x12C2 to #x12C5 collect x)
                        (loop for x from  #x12C8 to #x12CE collect x)
                        (loop for x from  #x12D0 to #x12D6 collect x)
                        (loop for x from  #x12D8 to #x12EE collect x)
                        (loop for x from  #x12F0 to #x130E collect x)
                        (loop for x from  #x1312 to #x1315 collect x)
                        (loop for x from  #x1318 to #x131E collect x)
                        (loop for x from  #x1320 to #x1346 collect x)
                        (loop for x from  #x1348 to #x135A collect x)
                        (loop for x from  #x1361 to #x137C collect x)
                        (loop for x from  #x13A0 to #x13F4 collect x)
                        (loop for x from  #x1401 to #x1676 collect x)
                        (loop for x from  #x1681 to #x169A collect x)
                        (loop for x from  #x16A0 to #x16F0 collect x)
                        (loop for x from  #x1700 to #x170C collect x)
                        (loop for x from  #x170E to #x1711 collect x)
                        (loop for x from  #x1720 to #x1731 collect x)
                        (loop for x from  #x1735 to #x1736 collect x)
                        (loop for x from  #x1740 to #x1751 collect x)
                        (loop for x from  #x1760 to #x176C collect x)
                        (loop for x from  #x176E to #x1770 collect x)
                        (loop for x from  #x1780 to #x17B6 collect x)
                        (loop for x from  #x17BE to #x17C5 collect x)
                        (loop for x from  #x17C7 to #x17C8 collect x)
                        (loop for x from  #x17D4 to #x17DA collect x)
                        (loop for x from  #x17E0 to #x17E9 collect x)
                        (loop for x from  #x1810 to #x1819 collect x)
                        (loop for x from  #x1820 to #x1877 collect x)
                        (loop for x from  #x1880 to #x18A8 collect x)
                        (loop for x from  #x1E00 to #x1E9B collect x)
                        (loop for x from  #x1EA0 to #x1EF9 collect x)
                        (loop for x from  #x1F00 to #x1F15 collect x)
                        (loop for x from  #x1F18 to #x1F1D collect x)
                        (loop for x from  #x1F20 to #x1F45 collect x)
                        (loop for x from  #x1F48 to #x1F4D collect x)
                        (loop for x from  #x1F50 to #x1F57 collect x)
                        (loop for x from  #x1F5F to #x1F7D collect x)
                        (loop for x from  #x1F80 to #x1FB4 collect x)
                        (loop for x from  #x1FB6 to #x1FBC collect x)
                        (loop for x from  #x1FC2 to #x1FC4 collect x)
                        (loop for x from  #x1FC6 to #x1FCC collect x)
                        (loop for x from  #x1FD0 to #x1FD3 collect x)
                        (loop for x from  #x1FD6 to #x1FDB collect x)
                        (loop for x from  #x1FE0 to #x1FEC collect x)
                        (loop for x from  #x1FF2 to #x1FF4 collect x)
                        (loop for x from  #x1FF6 to #x1FFC collect x)
                        (loop for x from  #x210A to #x2113 collect x)
                        (loop for x from  #x2119 to #x211D collect x)
                        (loop for x from  #x212A to #x212D collect x)
                        (loop for x from  #x212F to #x2131 collect x)
                        (loop for x from  #x2133 to #x2139 collect x)
                        (loop for x from  #x213D to #x213F collect x)
                        (loop for x from  #x2145 to #x2149 collect x)
                        (loop for x from  #x2160 to #x2183 collect x)
                        (loop for x from  #x2336 to #x237A collect x)
                        (loop for x from  #x249C to #x24E9 collect x)
                        (loop for x from  #x3005 to #x3007 collect x)
                        (loop for x from  #x3021 to #x3029 collect x)
                        (loop for x from  #x3031 to #x3035 collect x)
                        (loop for x from  #x3038 to #x303C collect x)
                        (loop for x from  #x3041 to #x3096 collect x)
                        (loop for x from  #x309D to #x309F collect x)
                        (loop for x from  #x30A1 to #x30FA collect x)
                        (loop for x from  #x30FC to #x30FF collect x)
                        (loop for x from  #x3105 to #x312C collect x)
                        (loop for x from  #x3131 to #x318E collect x)
                        (loop for x from  #x3190 to #x31B7 collect x)
                        (loop for x from  #x31F0 to #x321C collect x)
                        (loop for x from  #x3220 to #x3243 collect x)
                        (loop for x from  #x3260 to #x327B collect x)
                        (loop for x from  #x327F to #x32B0 collect x)
                        (loop for x from  #x32C0 to #x32CB collect x)
                        (loop for x from  #x32D0 to #x32FE collect x)
                        (loop for x from  #x3300 to #x3376 collect x)
                        (loop for x from  #x337B to #x33DD collect x)
                        (loop for x from  #x33E0 to #x33FE collect x)
                        (loop for x from  #x3400 to #x4DB5 collect x)
                        (loop for x from  #x4E00 to #x9FA5 collect x)
                        (loop for x from  #xA000 to #xA48C collect x)
                        (loop for x from  #xAC00 to #xD7A3 collect x)
                        (loop for x from  #xD800 to #xFA2D collect x)
                        (loop for x from  #xFA30 to #xFA6A collect x)
                        (loop for x from  #xFB00 to #xFB06 collect x)
                        (loop for x from  #xFB13 to #xFB17 collect x)
                        (loop for x from  #xFF21 to #xFF3A collect x)
                        (loop for x from  #xFF41 to #xFF5A collect x)
                        (loop for x from  #xFF66 to #xFFBE collect x)
                        (loop for x from  #xFFC2 to #xFFC7 collect x)
                        (loop for x from  #xFFCA to #xFFCF collect x)
                        (loop for x from  #xFFD2 to #xFFD7 collect x)
                        (loop for x from  #xFFDA to #xFFDC collect x)
                        (loop for x from  #x10300 to #x1031E collect x)
                        (loop for x from  #x10320 to #x10323 collect x)
                        (loop for x from  #x10330 to #x1034A collect x)
                        (loop for x from  #x10400 to #x10425 collect x)
                        (loop for x from  #x10428 to #x1044D collect x)
                        (loop for x from  #x1D000 to #x1D0F5 collect x)
                        (loop for x from  #x1D100 to #x1D126 collect x)
                        (loop for x from  #x1D12A to #x1D166 collect x)
                        (loop for x from  #x1D16A to #x1D172 collect x)
                        (loop for x from  #x1D183 to #x1D184 collect x)
                        (loop for x from  #x1D18C to #x1D1A9 collect x)
                        (loop for x from  #x1D1AE to #x1D1DD collect x)
                        (loop for x from  #x1D400 to #x1D454 collect x)
                        (loop for x from  #x1D456 to #x1D49C collect x)
                        (loop for x from  #x1D49E to #x1D49F collect x)
                        (loop for x from  #x1D4A5 to #x1D4A6 collect x)
                        (loop for x from  #x1D4A9 to #x1D4AC collect x)
                        (loop for x from  #x1D4AE to #x1D4B9 collect x)
                        (loop for x from  #x1D4BD to #x1D4C0 collect x)
                        (loop for x from  #x1D4C2 to #x1D4C3 collect x)
                        (loop for x from  #x1D4C5 to #x1D505 collect x)
                        (loop for x from  #x1D507 to #x1D50A collect x)
                        (loop for x from  #x1D50D to #x1D514 collect x)
                        (loop for x from  #x1D516 to #x1D51C collect x)
                        (loop for x from  #x1D51E to #x1D539 collect x)
                        (loop for x from  #x1D53B to #x1D53E collect x)
                        (loop for x from  #x1D540 to #x1D544 collect x)
                        (loop for x from  #x1D54A to #x1D550 collect x)
                        (loop for x from  #x1D552 to #x1D6A3 collect x)
                        (loop for x from  #x1D6A8 to #x1D7C9 collect x)
                        (loop for x from  #x20000 to #x2A6D6 collect x)
                        (loop for x from  #x2F800 to #x2FA1D collect x)
                        (loop for x from  #xF0000 to #xFFFFD collect x)
                        (loop for x from  #x100000 to #x10FFFD collect x)))))
    (cond ((eq form :char)
           (loop for x in r-chars
              collect (code-char x)))
          ((eq form :hex-string)
           (loop for x in r-chars
              collect (write-to-string x :base 16)))
          (t r-chars))))
